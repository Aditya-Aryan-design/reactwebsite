{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","tp","role","msg","Navbar","Fragment","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","style","display","height","width","backgroundColor","borderRadius","onClick","darkfun","TextForm","aditya","_useState","useState","_useState2","Object","slicedToArray","text","setText","color","htmlFor","rows","value","onChange","event","target","toUpperCase","alertFun","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","defaultProps","about","contact","textarea","btn","body","App","Myalert","setAlert","message","myInterval","setInterval","clearInterval","_useState3","_useState4","setMode","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.606435bc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div>\r\n    <div className={`alert alert-${props.alert.tp} fade show`} role=\"alert\">\r\n  <strong>{props.alert.tp}</strong> {props.alert.msg}\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" aria-current=\"page\" href=\"/\">{props.home}</a>\r\n          {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">{props.home}</Link> */}\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n           <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n          {/* <a className=\"nav-link\" href=\"/about\">{props.about}</a> \r\n        </li> */}\r\n          </ul>\r\n      <div className='mx-2' style={{display:\"block\",height:\"20px\", width:\"20px\",backgroundColor:\"red\", borderRadius:\"5px\"}} onClick={props.darkfun}></div>\r\n      <div className='mx-2' style={{display:\"block\",height:\"20px\", width:\"20px\",backgroundColor:\"blue\", borderRadius:\"5px\"}} onClick={props.darkfun}></div>\r\n      <div className='mx-2' style={{display:\"block\",height:\"20px\", width:\"20px\",backgroundColor:\"yellow\", borderRadius:\"5px\"}} onClick={props.darkfun}></div>\r\n      <div className='mx-2' style={{display:\"block\",height:\"20px\", width:\"20px\",backgroundColor:\"green\", borderRadius:\"5px\"}} onClick={props.darkfun}></div>\r\n      <div className='mx-2' style={{display:\"block\",height:\"20px\", width:\"20px\",backgroundColor:\"black\", borderRadius:\"5px\"}} onClick={props.darkfun}></div>\r\n          </div>\r\n        </div>\r\n      </nav> \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n//setting proptypes\r\nNavbar.propTypes = {\r\n  //title should be string\r\n  title: PropTypes.string.isRequired,\r\n  home: PropTypes.string\r\n}\r\n\r\n//sending default props\r\nNavbar.defaultProps = {\r\n  title : \"My Title\",\r\n  home : \"home\",\r\n  about : \"about\",\r\n  contact : \"contact\",\r\n  textarea : \"textarea\",\r\n  btn : \"btn\"\r\n\r\n }","//using useState\r\nimport React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(aditya) {\r\n  const UPclick = ()=>{\r\n    setText(text.toUpperCase());\r\n    aditya.alertFun('clicked on Upper-Case','primary')\r\n  }\r\n    const LOWclick = ()=>{\r\n      setText(text.toLowerCase());\r\n      aditya.alertFun('clicked on Lower-Case','primary')\r\n    }\r\n    const ONchange = (event)=>{\r\n      setText(event.target.value)\r\n    }\r\n    const ExtraSpace = ()=>{\r\n      setText(text.split(/[ ]+/).join(\" \"));\r\n      aditya.alertFun('clicked on Extra-Space','secondary')\r\n    }\r\n    const ClearText = ()=>{\r\n      setText(\"\");\r\n      aditya.alertFun('clicked on Clear-Text','danger')\r\n    }\r\n    const CopyText = ()=>{\r\n      let text = document.getElementById(\"exampleFormControlTextarea1\")\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      aditya.alertFun('clicked on Copy-Text','warning')\r\n    }\r\n    \r\n    const [text,setText] = useState(\"\");\r\n  return (\r\n    <div style={{color: aditya.mode===\"light\"?\"black\":\"#abfae3\"}}>\r\n<div className=\"mb-3\">\r\n  <div className=\"container\">\r\n        <h2>{aditya.title}</h2>\r\n  <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">{text}</label>\r\n  <textarea className=\"form-control border-primary\" id=\"exampleFormControlTextarea1\" rows={aditya.rows} value={text} onChange={ONchange} style={{backgroundColor:aditya.mode===\"light\"?\"white\":\"grey\"}}></textarea>\r\n  <button className={`btn btn-${aditya.mode===\"light\"?\"success\":\"danger\"} my-3`} onClick={UPclick} >Upper-Case</button>\r\n  <button className={`btn btn-${aditya.mode===\"light\"?\"success\":\"danger\"} my-3 mx-3`} onClick={LOWclick} >Lower-Case</button>\r\n  <button className={`btn btn-${aditya.mode===\"light\"?\"success\":\"danger\"} my-3`} onClick={ExtraSpace} >Extra-Space</button>\r\n  <button className={`btn btn-${aditya.mode===\"light\"?\"success\":\"danger\"} my-3 mx-3`} onClick={ClearText} >Clear-Text</button>\r\n  <button className={`btn btn-${aditya.mode===\"light\"?\"success\":\"danger\"} my-3`} onClick={CopyText} >Copy-Text</button>\r\n    </div>\r\n</div>\r\n<div className=\"container my-2\">\r\n    <h2>Text summery</h2>\r\n    <p>{text.split(\" \").length-1} words and {text.length} letters in your article</p>\r\n    <p>{text===\"\"?\"Enter Text\":text}</p>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","//import { Router } from 'express';\nimport React, { useState } from 'react'\n// import {BrowserRouter as Router,\n  // Route,Routes} from \"react-router-dom\"\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\ndocument.body.style.backgroundColor = \"#ced7ff\";\nfunction App() {\n  const [Myalert,setAlert] = useState(null)\n  const alertFun = (message,type) => {\n      setAlert({\n        msg: message,\n        tp: type\n      })\n     const myInterval = setInterval(() => {\n        setAlert(null);\n        clearInterval(myInterval)\n      }, 2000);\n    }\n  const [mode,setMode] = useState(\"light\")\n   const darkfun=()=>{\n      if(mode === \"dark\"){\n        setMode(\"light\")\n        document.body.style.backgroundColor = \"#ced7ff\";\n        alertFun(\"Light Mode\",\"success\")\n        document.title=\"Light\"\n      }\n      else{\n        setMode(\"dark\")\n        document.body.style.backgroundColor = \"#031733\"\n        alertFun(\"Dark Mode\",\"success\")\n        document.title=\"Dark\"\n       }\n }\n      return (\n    <>\n    {/* <Router> */}\n    <Navbar home= \"My-Home\" title=\"My-Site\" about=\"My-About\" contact=\"My-Contact\" textarea=\"Enter anything\" mode={mode} darkfun={darkfun}/>\n    {/* <Navbar/> */}\n    <Alert alert={Myalert}/>\n    <TextForm title=\"Aditya\" rows=\"10\" mode={mode} alertFun={alertFun}/>\n    {/* <Routes> */}\n      {/* use exact for exact maching */}\n      {/* <Route exact path=\"/about\" element={<About />}> */}\n    {/* </Route> */}\n    {/* <Route exact path=\"/\" element={<TextForm title=\"Aditya\" rows=\"10\" mode={mode} alertFun={alertFun}/>}> */}\n    {/* </Route> */}\n    {/* </Routes> */}\n\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}